@page "/login"

@attribute [AllowAnonymous]
@inject NavigationManager Navigation
@inject IJwtAuthService AuthService
@layout AuthLayout

<div class="card col-md-6 offset-3">
    <div class="card-header">
        <h3 class="text-center fw-bold text-primary">Enter your data to login</h3>
    </div>
    <div class="card-body">
        <EditForm Model="@LoginData" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary style="color:indianred" Model="@LoginData" />

            <div class="form-group mt-2">
                <label for="Email" class="form-label">Email Address</label>
                <InputText id="Email" @bind-Value="@LoginData.Email" class="form-control"></InputText>
                <ValidationMessage For="() => LoginData.Email"></ValidationMessage>
            </div>

            <div class="form-group mt-2">
                <label for="Password" class="form-label">Password</label>
                <InputText type="password" id="Password" @bind-Value="LoginData.Password" class="form-control"></InputText>
                <ValidationMessage For="() => LoginData.Password"></ValidationMessage>
            </div>

            <div class="form-group mt-2">
                <button class="btn btn-outline-primary float-center" disabled="@IsSubmitDisabled" type="submit">Login</button>
            </div>
        </EditForm>
    </div>
</div>


@code {
    public LoginDto LoginData { get; set; } = new();
    public bool IsSubmitDisabled = false;

    public async Task HandleSubmit()
    {
        ToggleSubmitDisabled();
        Console.WriteLine(LoginData.Email);
        Console.WriteLine(LoginData.Password);
        var loginResult = await AuthService!.LoginAsync(LoginData);
        if (loginResult is not null)
        {
            Console.WriteLine($"Error during registration! {loginResult.Message}");
        }
        else
        {
            Navigation!.NavigateTo("/");
        }
        ToggleSubmitDisabled();
    }

    private void ToggleSubmitDisabled()
    {
        IsSubmitDisabled = !IsSubmitDisabled;
    }
}