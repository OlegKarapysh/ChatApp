@inject IGroupsWebApiService GroupService
@inject IToastService ToastService
@inject DialogService Dialog

<div class="card-body">
    <EditForm Model="@NewGroupData" OnValidSubmit="SubmitNewGroup">
        <DataAnnotationsValidator />
        <ValidationSummary style="color:indianred" Model="@NewGroupData" />
        <div class="form-group">
            <label for="name" class="form-label">Group name:</label>
            <InputText id="name" class="form-control" placeholder="Name..."
                       @bind-Value="@NewGroupData.Name"></InputText>
            <ValidationMessage For="() => NewGroupData.Name"></ValidationMessage>
        </div>

        <div class="form-group mt-2">
            <label for="instructions" class="form-label">AI assistant instructions:</label>
            <InputText id="instructions" class="form-control" placeholder="You are my personal assistant..."
                       @bind-Value="@NewGroupData.Instructions"></InputText>
            <ValidationMessage For="() => NewGroupData.Instructions"></ValidationMessage>
        </div>

        <div class="form-group mt-2">
            <button class="btn btn-outline-primary float-end" disabled="@IsSubmitDisabled" type="submit">Create</button>
        </div>
    </EditForm>
</div>

@code 
{
    public NewGroupDto NewGroupData { get; set; } = new();
    public bool IsSubmitDisabled { get; set; }

    private async Task SubmitNewGroup()
    {
        IsSubmitDisabled = true;
        var response = await GroupService!.CreateGroupAsync(NewGroupData);
        if (response.IsSuccessful)
        {
            Dialog!.Close(true);
        }
        else
        {
            ToastService!.ShowError(response.ErrorDetails?.Message ?? "Failed to create a group");
        }
        IsSubmitDisabled = false;
    }
}